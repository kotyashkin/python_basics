"""
«Склад оргтехники». Создайте класс, описывающий склад.
А также класс «Оргтехника», который будет базовым для классов-наследников.
Эти классы — конкретные типы оргтехники (принтер, сканер, ксерокс).
В базовом классе определить параметры, общие для приведенных типов.
В классах-наследниках реализовать параметры, уникальные для каждого типа оргтехники.

Разработать методы, отвечающие за приём оргтехники
на склад и передачу в определенное подразделение компании. Для хранения данных
о наименовании и количестве единиц оргтехники, а также других данных, можно использовать
любую подходящую структуру, например словарь.

Реализуйте механизм валидации вводимых
пользователем данных. Например, для указания количества принтеров, отправленных
на склад, нельзя использовать строковый тип данных.
Подсказка: постарайтесь по возможности реализовать в проекте «Склад оргтехники»
максимум возможностей, изученных на уроках по ООП.
"""

class Store:
    def __init__(self, item, sector):
        self.item = item
        self.sector = sector
    def to_take(self):
        store = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]  # на складе допустим 10 секторов для хранения нескольких единиц товара в каждом
        store.remove(self.sector)
        store.incert(self.sector, self.item)
        print(store)

class Tech:
    def __init__(self, name, qu, cost):
        self.name = name
        self.qu = qu
        self.cost = cost
        #self.unit = {'Название': self.name, 'Цена за ед': self.cost, 'Количество': self.qu}

    def __str__(self):
        self.unit = {'Название': self.name, 'Цена за ед': self.cost, 'Количество': self.qu}
        return f'{self.unit}'

class Printer(Tech):
    def to_print(self, i):
        color = ["чёрно-белый", "цветной"]
        return f'Принтер {self.name} печатает документ; параметр "цвет" = {color[i]}'

class Scanner(Tech):
    def to_scan(self, x, y):
        return f'Сканер {self.name} сканирует документ; параметр "разрешение": {x} на {y} пикс.'

class Xerox(Tech):
    def to_copier(self, speed):
        return f'Ксерокс {self.name} копирует файлы; параметр "скорость печати" = {speed} листов в минуту'

unit1 = Printer('hp', 5, 2000)
unit2 = Scanner('Canon', 4, 1200)
unit3 = Xerox('Xerox', 2, 1500)
print(unit1)
print(unit1.to_print(1))
print(unit2.to_scan(1920, 1200))
print(unit3.to_copier(20))
store1 = Store(unit1, 9)
print(store1.to_take())